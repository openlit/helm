---
apiVersion: v1
kind: ConfigMap
metadata:
  name: openlit-collector-config
  labels:
    app: {{ include "openlit.fullname" . }}
    # {{- include "openlit.labels" . | nindent 4 }}
    app.kubernetes.io/component: opentelemetry-collector
data:
  opentelemetry-collector-config: |
    receivers:
      otlp:
        protocols:
          grpc:
            endpoint: 0.0.0.0:4317
          http:
            endpoint: 0.0.0.0:4318
    processors:
      batch:
      memory_limiter:
        limit_mib: 1500
        spike_limit_mib: 512
        check_interval: 5s
    extensions:
      zpages: {}
    exporters:
      clickhouse:
        endpoint: tcp://${env:INIT_DB_HOST}:${env:INIT_DB_PORT}?dial_timeout=10s
        database: ${env:INIT_DB_DATABASE}
        username: ${env:INIT_DB_USERNAME}
        password: ${env:INIT_DB_PASSWORD}
        ttl: 730h
        logs_table_name: otel_logs
        traces_table_name: otel_traces
        metrics_table_name: otel_metrics
        timeout: 5s
        retry_on_failure:
          enabled: true
          initial_interval: 5s
          max_interval: 30s
          max_elapsed_time: 300s
    service:
      pipelines:
        logs:
          receivers: [ otlp ]
          processors: [ batch ]
          exporters: [ clickhouse ]
        traces:
          receivers: [ otlp ]
          processors: [memory_limiter, batch]
          exporters: [ clickhouse ]
        metrics:
          receivers: [ otlp ]
          processors: [memory_limiter, batch]
          exporters: [ clickhouse ]
---

apiVersion: apps/v1
kind: StatefulSet
metadata:
  labels:
    app: {{ include "openlit.fullname" . }}
    {{- include "openlit.labels" . | nindent 4 }}
    app.kubernetes.io/component: openlit
  name: {{ include "openlit.fullname" . }}
  namespace: {{ .Release.Namespace }}
spec:
  serviceName: {{ include "openlit.fullname" . }}
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      app: {{ include "openlit.fullname" . }}
      {{- include "openlit.selectorLabels" . | nindent 6 }}
    # app.kubernetes.io/component: openlit
  template:
    metadata:
      labels:
        app: {{ include "openlit.fullname" . }}
        {{- include "openlit.labels" . | nindent 8 }}
        app.kubernetes.io/component: openlit
    spec:
      {{- if .Values.clickhouse.enabled }}
      initContainers:
      - name: wait-for-clickhouse
        image: busybox:1.35
        command: ['sh', '-c']
        args:
        - |
          echo "Waiting for ClickHouse to be ready..."
          until nc -z {{ .Release.Name }}-db.{{ .Release.Namespace }}.svc.cluster.local 8123; do
            echo "ClickHouse not ready, waiting..."
            sleep 5
          done
          echo "ClickHouse is ready!"
          
          # Also check if ClickHouse HTTP interface is responding
          until wget --quiet --tries=1 --timeout=3 --spider http://{{ .Release.Name }}-db.{{ .Release.Namespace }}.svc.cluster.local:8123/ping || [ $? -eq 4 ]; do
            echo "ClickHouse HTTP interface not ready, waiting..."
            sleep 5
          done
          echo "ClickHouse HTTP interface is ready!"
      {{- end }}
      containers:
      - name: openlit
        image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
        imagePullPolicy: {{ .Values.image.pullPolicy }}
        ports:
          - containerPort: {{ .Values.service.port }}
        readinessProbe:
          httpGet:
            path: /
            port: {{ .Values.service.port }}
          initialDelaySeconds: 10
          periodSeconds: 5
          timeoutSeconds: 3
          successThreshold: 1
          failureThreshold: 6
        livenessProbe:
          httpGet:
            path: /
            port: {{ .Values.service.port }}
          initialDelaySeconds: 60
          periodSeconds: 30
          timeoutSeconds: 10
          failureThreshold: 3
        env:
          - name: TELEMETRY_ENABLED
            value: "{{ .Values.config.usageMetrics }}"
          {{- if .Values.clickhouse.enabled }}
          - name: INIT_DB_HOST
            value: "{{ .Release.Name }}-db.{{ .Release.Namespace }}.svc.cluster.local"
          {{- else }}
          - name: INIT_DB_HOST
            value: "{{ .Values.config.database.host }}"
          {{- end }}
          - name: INIT_DB_PORT
            value: "{{ .Values.config.database.port }}"
          - name: INIT_DB_DATABASE
            value: "{{ .Values.config.database.name }}"
          - name: SQLITE_DATABASE_URL
            value: "{{ .Values.config.sqlite_url }}"
          {{ if .Values.config.secret }}
          - name: INIT_DB_USERNAME
            valueFrom:
              secretKeyRef:
                name: {{ .Values.config.secret.name }}
                key: {{ .Values.config.secret.usernameKey }}
          - name: INIT_DB_PASSWORD
            valueFrom:
              secretKeyRef:
                name: {{ .Values.config.secret.name }}
                key: {{ .Values.config.secret.passwordKey }}
          {{ else }}
          - name: INIT_DB_USERNAME
            value: "{{ .Values.config.database.username }}"
          - name: INIT_DB_PASSWORD
            value: "{{ .Values.config.database.password }}"
          {{- end }}
          {{- if .Values.config.preview_mode.enabled }}
          - name: DEMO_ACCOUNT_EMAIL
            value: "{{ .Values.config.preview_mode.account_email }}"
          - name: DEMO_ACCOUNT_PASSWORD
            value: "{{ .Values.config.preview_mode.account_password }}"
          {{- end }}
        resources:
          {{- toYaml .Values.resources | nindent 10 }}
        {{- if .Values.persistence.enabled }}
        volumeMounts:
          - name: openlit-data
            mountPath: /app/client/data
        {{- end }}
      - name: opentelemetry-collector
        image: otel/opentelemetry-collector-contrib:0.94.0
        command:
          - "/otelcol-contrib"
          - "--config=/conf/opentelemetry-collector-config.yaml"
        ports:
          - containerPort: 4317
          - containerPort: 4318
          - containerPort: 8888
        readinessProbe:
          httpGet:
            path: /
            port: 8888
          initialDelaySeconds: 5
          periodSeconds: 5
          timeoutSeconds: 3
          successThreshold: 1
          failureThreshold: 3
        livenessProbe:
          httpGet:
            path: /
            port: 8888
          initialDelaySeconds: 15
          periodSeconds: 30
          timeoutSeconds: 5
          failureThreshold: 3
        env:
          {{- if .Values.clickhouse.enabled }}
          - name: INIT_DB_HOST
            value: "{{ .Release.Name }}-db.{{ .Release.Namespace }}.svc.cluster.local"
          {{- else }}
          - name: INIT_DB_HOST
            value: "{{ .Values.config.database.host }}"
          {{- end }}
          - name: INIT_DB_PORT
            value: "9000"
          - name: INIT_DB_DATABASE
            value: "{{ .Values.config.database.name }}"
          {{ if .Values.config.secret }}
          - name: INIT_DB_USERNAME
            valueFrom:
              secretKeyRef:
                name: {{ .Values.config.secret.name }}
                key: {{ .Values.config.secret.usernameKey }}
          - name: INIT_DB_PASSWORD
            valueFrom:
              secretKeyRef:
                name: {{ .Values.config.secret.name }}
                key: {{ .Values.config.secret.passwordKey }}
          {{ else }}
          - name: INIT_DB_USERNAME
            value: "{{ .Values.config.database.username }}"
          - name: INIT_DB_PASSWORD
            value: "{{ .Values.config.database.password }}"
          {{- end }}
        volumeMounts:
          - name: opentelemetry-collector-config-vol
            mountPath: /conf
      volumes:
        - name: opentelemetry-collector-config-vol
          configMap:
            name: openlit-collector-config
            items:
              - key: opentelemetry-collector-config
                path: opentelemetry-collector-config.yaml
      {{- if .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- range .Values.imagePullSecrets }}
        - name: {{ . }}
        {{- end }}
      {{- end }}
      nodeSelector:
        {{ toYaml .Values.nodeSelector | nindent 8 }}
      {{- if .Values.tolerations }}
      tolerations:
        {{- toYaml .Values.tolerations | nindent 8 }}
      {{- end }}
      {{- if .Values.affinity }}
      affinity:
        {{- toYaml .Values.affinity | nindent 8 }}
      {{- end }}
  {{- if .Values.persistence.enabled }}
  volumeClaimTemplates:
  - metadata:
      name: openlit-data
    spec:
      accessModes: [ "{{ .Values.persistence.accessMode }}" ]
      resources:
        requests:
          storage: {{ .Values.persistence.size }}
      {{- with .Values.persistence.storageClassName }}
      storageClassName: {{ . }}
      {{- end }}
  {{- end }}
---
apiVersion: v1
kind: Service
metadata:
  name: {{ include "openlit.fullname" . }}
  labels:
    app: {{ include "openlit.fullname" . }}
    {{- include "openlit.labels" . | nindent 4 }}
    app.kubernetes.io/component: openlit
  {{- if .Values.service.annotations }}
  annotations:
    {{- toYaml .Values.service.annotations | nindent 8 }}
  {{- end }}
spec:
  type: {{ .Values.service.type }}
  ports:
    - name: openlit
      port: {{ .Values.service.port }} 
      targetPort: {{ .Values.service.target_port }}
    - name: otel-otlp
      port: 4317
      targetPort: 4317
    - name: otel-http
      port: 4318
      targetPort: 4318
  selector:
    app: {{ include "openlit.fullname" . }}
    {{- include "openlit.selectorLabels" . | nindent 4 }}
    app.kubernetes.io/component: openlit
  sessionAffinity: {{ .Values.service.sessionAffinity }}
